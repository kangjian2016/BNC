% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BNCmainfun.R
\name{BNC}
\alias{BNC}
\title{{Bayesian Node Classification with Missing Values on The Biological Network}}
\usage{
BNC(net,test.stat,pvalue.stat=FALSE,candidate.z.set=c(-1,0,1),
seed.main=1024,na.action=c("NN","Bayes","na.remove"),niter.densupd=5,niter=10,
paras=list(tau=c(2,10,2),alpha=NULL,gamma=NULL,xi=NULL, beta=rep(10,3),
rho=c(1.003,0.479,0.988,0.000),pivec=c(0.15,0.7,0.15),densAcc=0.001,
null.quantile=c(0.25, 0.75),null.method="biGaussianModeSplit",
transitionMatrix.Z.11=0.6,miss.stat=2,min.node=5),
para.DPM=NULL,para.HODC=NULL,para.DMH=NULL)
}
\arguments{
\item{net}{The binary adjacent matrix representing the gene network configuration. The element at (i,j) location of value 0 indicating "gene i and gene j are connected" or "gene i and gene j are not directly connected"}

\item{test.stat}{The observed test statistics. Missing values are represented as NA. If the test statistics are p-values, the boolean label indicating the statistics are p-values: pvalue.stat should be TRUE otherwise FALSE}

\item{pvalue.stat}{Logical. Indicating whether the test statistics are generated as pvalues or not. The default is FALSE}

\item{candidate.z.set}{A set of all the possible values of the regulation type, the values of indicators. The default is (-1,0,1), 1=down-regulated genes, 2=not differentially expressed genes, 3=up-regulated genes}

\item{seed.main}{The random seed used for generating reproducible results. The default is 1024}

\item{na.action}{The method used for handling genes with missing values. It can be "NN" for nearest neighbor imputation method, "Bayes" for fully Bayesian inference for imputation, or "na.remove" for removing all the missing nodes and their edges in the network}

\item{niter.densupd}{The total number of iterations for updating density. The default is 5}

\item{niter}{The total number of iterations for main algorithm. The default is 10}

\item{paras}{A list contains hyper-parameters and other parameters used before main algorithm runs
\itemize{
\item niter.densupd The iteration is from 1 to the maximum steps when we update density specification by DPM. The default is 20
\item tau A vector of length 3, the default is c(2,10,2)
\item alpha A vector of length 3. The default is NULL
\item gamma A vector of length 3. The default is NULL
\item xi A vector of length 3. The default is NULL
\item beta A vector of length 3. The default is c(10,10,10)
\item rho A vector of length 4. The default is c(1.003,0.479,0.988,0.000), indicating local smoothness for Potts prior. Note: the default value is calculated based on data(net) strucutre by DMH
\item pivec A vector of length 3. The default is c(0.15,0.7,0.15). Contains prior knowledge globally about selection indicator z
\item densityAcc A number, need to specify precision for K-L integration when to use the numerical approximation. The default is 0.001
\item null.quantile A vector of length 2, representing the lower quantile and the upper quantile for calculating prior null density if lack of prior biology knowledge. The default is c(0.25, 0.75)
\item null.method A string. The name of method we used to estimate the null density. It can be  "biGaussianMean0"-- the null density is formed by two half normals. They share the same mean of 0. "biGaussianModeSplit"-- split data from their median value, then flip each part to the other side to estimate normal distribution
\item transitionMatrix.Z.11 The [1,1] element in transition matrix for z. The default is 0.6
\item miss.stat To impute NAs in the test statistics when apply Double Metropolis-Hastings sampler (DMH) to find hyperparameters rho and pi
\item min.node The minimum number of nodes in class of regulations
}}

\item{para.DPM}{A list of parameters used for fitting Dirichlet process mixture (DPM) model. The default is NULL when all members will use their built-in default values
\itemize{
\item niter The number of iterations. The default is 10
\item nsample The number of samples. The default is 10
\item KLrange A vector of length 2, the first element is integration lower bound and the second element is integration upper bound in calculating K-L distance of the proposed null density vs. prior null density. The default is c(-6,6), usually we suggest wider range than the boundaries of observed test statistics
\item KLprecision A number. The numerical precision for integration calculating the K-L distance. The default is 0.001
\item KLNullmethod The name of the method to calculate the proposal density. The default is "biGaussianMean0"
\item mcmc A list of the MCMC parameters for DPM. nburn is the number of burn-in iterations, nskip is the thinning interval, nsave is the total number of iterations to be saved, and ndisplay is the number of saved iterations to be displayed on screen. The default value is nburn=10000, nsave=100, nskip=0, ndisplay=10000
\item prior A list of the prior information for DPM, alpha is the value of the precision, m1 is the mean of the normal part of the baseline distribution, nu1 and psiinv1 is the hyperparameters of the inverted Wishart part of the baseline distribution, tau1 and tau2 is the hyperparameters for the gamma prior distribution. The default is alpha=3, m1=rep(0,1), psiinv1=diag(0.5,1), nu1=4, tau1=1, tau2=100
}}

\item{para.HODC}{A list of the parameters used for KL-HODC algorithm to find the proper initial values for fast convergence. The default is NULL when all members will use their built-in default values
\itemize{
\item nsample The number of samples. The default is 10
\item KLrange A vector of length 2, the first element is integration lower bound and the second element is integration upper bound in calculating K-L distance of the proposed null density vs. prior null density. The default is c(-6,6), usually we suggest wider range than the boundaries of observed test statistics
\item KLprecision A number. The numerical precision for integration calculating the K-L distance. The default is 0.001
\item KLNullmethod The name of the method to calculate the proposal density. The default is "biGaussianMean0"
\item mcmc A list of the MCMC parameters for DPM. nburn is the number of burn-in iterations, nskip is the thinning interval, nsave is the total number of iterations to be saved, and ndisplay is the number of saved iterations to be displayed on screen. The default value is nburn=1000, nsave=100, nskip=0, ndisplay=1000
\item prior A list of the prior information for DPM, alpha is the value of the precision, m2 and s2 is the mean and the covariance of the normal prior for the mean, nu2 and psiinv2 are the hyperparameters of the inverted Wishart prior distribution for the scale matrix, which is calculated from data along the way, nu1 is the hyperparameter of the inverted Wishart part of the baseline distribution, tau1 and tau2 is the hyperparameters for the gamma prior distribution. The default is alpha=3, m2=rep(0,1), s2=diag(100000,1), nu1=4, nu2=4, tau1=1, tau2=100
}}

\item{para.DMH}{If inside paras, the rho and pivec is not given, Double Metropolis-Hastings algorithm (DMH) is used for pre-calculating rho and pivec. The default parameter list is used which contains
\itemize{
\item niter The number of iterations in total. The default is 1000
\item pistat The initial values of pivec. The default is c(0.25,0.5,0.25)
\item pisd The vector of standard deviations when sampling pivec. The default is c(0.03,0.03,0.03)
\item rhostat The initial values of rho. The default is c(1,0.5,1,0)
\item rhosd The vector of standard deviations when sampling rho. The default is c(0.03,0.03,0.03,0.03)
\item rhoLowB The vector of lower bounds in sampling rho. The default is c(0,0,0,0)
\item rhoUpB The vector of upper bounds in sampling rho. The default is c(1.5,1.5,1.5,1.5)
\item piLowB The vector of lower bounds in sampling pi. The default is c(0,0,0)
\item piUpB The vector of upper bounds in sampling pi. The default is c(1,1,1)
\item niter.z The number of iterations within each iteration updating rho and pivec to update z. The default is 1
\item replaceInf The value used to replace Inf. The default is -99999
\item DMHplot Logical. Whether to plot. The default is FALSE
}}
}
\value{
A list contains
\item{initialValue}{The initial parameter list used in main algorithm}
\item{zTrack}{The trace for z}
\item{FinalValue}{The final parameter list after convergence}
\item{iters}{The total number of iterations}
\item{rmisTrack}{The trace for imputed values of the missing values in test statistics. Only applicable when there are missing values in the test statistics and imputation methods are used}
}
\description{
Main function. Two steps: Given density specification, update selection indicator z by Swendsen- Wang algorithm; and given selection indicator z, update density specification by DPM fitting algorithm.
}
\details{
The fully Bayesian updating algorithm is executed in the following procedure
\itemize{
\item Input data r and gene network represented by graph G=<V,E>
\item Update z|theta via Swendsen-Wang
\item Update theta|z via DPM Fitting
}
}
\examples{
\dontrun{
## The simulation settings based on real gene network (takes time)
data("geneNetwork")
data("testStatistics")
## three different regulation types- three class classification example
res=BNC(net=geneNetwork,test.stat=testStatistics,niter=300,na.action="NN")
## three different regulation types- two class classification example
res=BNC(net=geneNetwork,test.stat=pnorm(testStatistics),pvalue.stat=TRUE,
candidate.z.set=c(0,1),na.action="NN",niter=300,
paras=list(tau=c(2,10),alpha=NULL,gamma=NULL,xi=NULL, beta=rep(10,2),rho=c(1,0.5,0),
pivec=c(0.2,0.8),densAcc=0.001,null.quantile=c(0.25, 1),
null.method="biGaussianModeSplit",transitionMatrix.Z.11=0.6,miss.stat=2,min.node=5))

## A toy example
simdata=simulatedDatasetGenerator(nnode=100,missing=TRUE,missrate=0.1,dist="norm",
plot=FALSE,nbin=c(20,20,10),rng=1024)
res=BNC(net=simdata$net,test.stat=simdata$testcov,niter=100,na.action="NN",
paras=list(tau=c(2,10,8),alpha=NULL,gamma=NULL,xi=NULL,beta=rep(10,3),
rho=c(1.003,0.479,0.988,0.000),pivec=c(0.25,0.40,0.35),densAcc=0.001,
null.quantile=c(0.25, 0.75),null.method="biGaussianModeSplit",transitionMatrix.Z.11=0.5,
miss.stat=2,min.node=5))
classLabelEst=summaryClassLabels(simdata$net,simdata$testcov,res$zTrack,
method="MajorVote",nburn=50)
print(table(classLabelEst))
}
}
